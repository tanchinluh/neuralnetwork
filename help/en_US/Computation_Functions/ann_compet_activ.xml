<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from ann_compet_activ.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="ann_compet_activ" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>ann_compet_activ</refname>
    <refpurpose>Competitive Activation Function</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Calling Sequence</title>
   <synopsis>
   y = ann_compet_activ(x)
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>x :</term>
      <listitem><para> Input vector/matrix, one column represent 1 set of data</para></listitem></varlistentry>
   <varlistentry><term>y :</term>
      <listitem><para> Output vector/matrix with winning neuron</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
This is the activation function for competitive network, in which it will return the winning neoron as 1, while others as 0.
   </para>
   <para>
</para>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
ann_compet_activ(rand(5,5))

   ]]></programlisting>
</refsection>

<refsection>
   <title>See also</title>
   <simplelist type="inline">
   <member><link linkend="ann_compet_init">ann_compet_init</link></member>
   <member><link linkend="ann_COMPET">ann_COMPET</link></member>
   </simplelist>
</refsection>

<refsection>
   <title>Authors</title>
   <simplelist type="vert">
   <member>Tan C.L.</member>
   </simplelist>
</refsection>
</refentry>
